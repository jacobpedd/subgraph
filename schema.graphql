type _Schema_
  @fulltext(
    name: "sellOrderSearch"
    language: en
    algorithm: rank
    include: [{ entity: "SellOrder", fields: [{ name: "title" }, { name: "description" }] }]
  )

type OrderBook @entity {
  id: ID!
  orders: [SellOrder!]!
  fee: BigInt!
  owner: Bytes!
}

type SellOrder @entity {
  id: ID!
  address: Bytes!
  uri: String!
  sellersStake: BigInt!,
  title: String, 
  description: String,
  primaryImage: String,
  encryptionPublicKey: String, 
  priceSuggested: String,
  stakeSuggested: String,
  error: String
  offers: [Offer!]!
  token: Token
  tokenAddress: Bytes!
  seller: Bytes!
  timeout: BigInt!
  createdAt: BigInt!
}

enum OfferState {
  Closed
  Open
  Committed
}

type Offer @entity {
  id: ID!
  buyer: Bytes!
  seller: Bytes
  index: BigInt!
  quantity: BigInt!
  pricePerUnit: BigInt!
  stakePerUnit: BigInt!
  uri: String!
  createdAt: BigInt!
  offerState: OfferState!
}

type Token @entity {
  id: ID!
  address: Bytes!
  name: String!
  symbol: String!
  totalSupply: BigInt!
  decimals: BigInt!
}